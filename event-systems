React has its own event system for handling called SyntheticEvent
Having a specific event system instead of using native events is cross-browser compatibility
Important to keep in mid that they are the exact same events, just implemented more consistently

HOW TO ADD EVENT HANDLERS
Example:
class Tickler extends React.Component {

  tickle = () => { //binding tickle() using arrow function to avoid creating new scope
    console.log('Tee hee!');
  }

  render() {
    return (
      <button>Tickle me!</button>
    );
  }
}
*no way to trigger tickle() function, therefore add an event handler to it, attach handler to
element much like adding to prop*
-Always compromised of 'on' and the event name itself (click or submit, etc)

<button onClick={this.tickle}>Tickle me!</button>

-Passing a function reference, not executing the tickle function
-L9: not required, all methods in React component always use THIS one way or another
